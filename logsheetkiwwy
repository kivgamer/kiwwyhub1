-- This file was generated using Luraph Obfuscator v13.5.4

return(function(cR,DR,lR,GR,fR,dR,BR,CR,nR,WR,gR,XR,sR,UR,oR,IR,yR,JR,tR,pR,uR,mR,bR,LR,TR,iR,rR,jR,ER,eR,NR,HR,MR,kR,hR,VR,KR,aR,SR,zR,...)local AR=(1);local w,F=nil,nil;do while AR<2 do if AR~=0 then do w=SR;end;do AR=0X0;end;else F=iR;AR=0X2;end;end;end;local Y=(tostring);do AR=0X0;end;local x,z,g=nil,nil,(nil);while AR<3 do if AR<=0X00 then x=eR;AR=0X1;else if AR==0X01 then do z={0X1,KR,2};end;AR=2;else gend;end;end;local Z,i=nil,nil;for Y7=0,0X1 do if Y7==0 then Z=ER;else do i=LR;end;end;end;local G=unpack or IR;local o,R,RR=next,type,({});local s,K,L=0X1,VR.insert,(rawget);local qR={};local P,V=oR,(rawset);local B=({[0]={[0]=0,uR,0X2,3,4,0X5,0X00006,7,0X008,0X9,0XA,0X0B,0XC,13,0Xe,15},{[0X00]=0x1,0x0,0x3,0X2,0X00005,4,0X07,6,0X9,0X08,0Xb,10,0Xd,0XC,0x00F,0Xe},{[0X000]=0x2,3,0X0,1,6,0X007,4,0X5,10,0XB,0X0008,0X9,14,GR,HR,0X0000D},{[0X0]=0X003,0X2,1,0,7,6,5,0X4,11,10,9,8,0X00f,0Xe,0x000D,12},{[0]=0X4,0X5,0X06,DR,0x00000,0x1,0x002,0X3,0X000c,13,0XE,0XF,8,0X09,0XA,0x0000B},{[0]=0X5,0X4,7,yR,uR,0,3,2,0x00d,12,0X000f,14,sR,0X8,0XB,gR},{[0]=6,0X07,0X4,5,2,0x3,0X0,uR,14,15,0XC,0X000d,10,0X00b,0x8,0X09},{[0]=7,0X06,5,4,KR,0X2,1,NR,15,0x0E,13,0Xc,0XB,10,9,0X8},{[0X0]=0x8,0X009,0X0000a,11,12,13,UR,15,0,uR,2,3,4,0X5,0X006,0X7},{[0]=0X00009,0X08,0xb,gR,13,HR,0X00f,0X000e,1,0,0X0003,2,0X5,0X004,7,0X06},{[0]=10,11,0x008,9,0X0e,0XF,12,13,2,KR,0,0x1,0X6,0X07,4,5},{[NR]=0x000b,0x0000a,0X9,0X00008,15,0x00e,13,0XC,KR,0X2,1,0,7,6,mR,4},{[0X0000]=12,jR,UR,0XF,8,0X9,10,0X0000b,4,0X0005,6,0X7,0,1,0X002,3},{[0X000]=0X0000d,0x0C,GR,0XE,9,8,0X0B,10,0x05,0X4,7,0X6,1,0X00,3,pR},{[0X0]=0Xe,0X0000F,12,13,10,11,0x00008,9,6,7,0X4,0X5,0X0002,KR,0x0000,0x1},{[0X00000]=0Xf,14,0XD,0XC,11,0x0000A,9,0x8,7,6,mR,0x04,3,pR,1,0X00}});local D=XR;AR=2;local Q,d,y,p=nil,nil,nil,(nil);repeat if AR<=1 then do if AR==0X0 then y=(D and D()or rR);AR=3;else do d={[0x0]=1};end;do AR=0;end;end;end;else if AR~=2 then do p=4294967296;end;AR=0X4;else Q=string.byte;AR=1;end;end;until AR==4;local H=(setfenv);AR=0;local S=nil;repeat do if AR==0X000 then AR=1;else S=fR.rep;AR=2;end;end;until AR>=2;local r=(p-1);AR=0X0001;local e,N,U,j=nil,nil,nil,(nil);do while-0X1B3Aec73 do if not(AR<=0X1)then if AR<=2 then do j=0X80000000;end;do break;end;else if AR~=0X3 then g=i(x(g,5),"..",function(CV)if Q(CV,0x2)==72 then local FD=1;while 0.1659458171393975 do if FD~=0X000 then N=P(x(CV,1,0x01));do FD=0X0000;end;else return"";end;end;else local y5=nil;do for Qm=0X0,0X0001 do if Qm==0 then y5=Z(P(CV,0X00010));else if not(N)then return y5;else local ZT=nil;for Tb=0,2 do do if not(Tb<=0X0)then if Tb~=1 then return ZT;else N=nR;end;else do ZT=S(y5,N);end;end;end;end;end;end;end;end;end;end);AR=0;else AR=0X00004;end;end;else if AR~=0X0 then e=dR;AR=0X0003;else U=function()local YL,mL=0X0,(nil);do repeat do if YL<=0X0000 then mL=Q(g,s,s);YL=0X00002;else do if YL==1 then return mL;else s=s+1;YL=1;end;end;end;end;until false;end;end;AR=2;end;end;end;end;local X=(2^0X0034);local f=j-1;local u=(kR);local m=function()local gS,iS,TS,MS,YS=0x0,nil,nil,nil,(nil);do while'D$\087'do if gS<=0 then do iS,TS,MS,YS=Q(g,s,s+3);end;do gS=2;end;else do if gS==1 then return YS*0x1000000+MS*65536+TS*256+iS;else s=s+4;gS=1;end;end;end;end;end;end;local T=(function()local a6,v6,D6=2,nil,nil;do repeat do if a6<=0 then do if D6>=j then do D6=D6-p;end;end;end;a6=1;else if a6~=1 then v6,D6=m(),m();a6=0X0;else return D6*p+v6;end;end;end;until(false);end;end);do local RG=(0X1);local nG=nil;while RG~=2 do if RG==0x0 then do for KH=uR,31 do(d)[KH]=nG;nG=nG*0x002;end;end;do RG=2;end;else do nG=0x2;end;do RG=0;end;end;end;end;local k,E=function(cC,yC,HC)local uC=0x0000;local xC=(cC/d[yC])%d[HC];while true do do if uC==0X000 then xC=xC-xC%0X01;uC=1;else return xC;end;end;end;end,(TR);local v=assert;do AR=0X1;end;local M,c=nil,nil;while AR<2 do do if AR==0X0 then do c=(BR or bit32);end;AR=2;else M=function()local cD,pD=nil,(nil);local HD=0X2;do repeat do if not(HD<=0)then if HD~=1 then cD=m();do HD=0;end;else if not(cD==0X000 and pD==0X0)then else return 0;end;HD=3;end;else pD=m();do HD=0X1;end;end;end;until HD==3;end;local eD=((-1)^k(pD,0X00001f,uR));local XD=(k(pD,MR,0X0000b));local PD=(k(pD,0x0,0X14)*p+cD);HD=2;local gD=nil;while'V\032\042*\069'do if not(HD<=0X0000)then if HD~=0x00001 then gD=1;do HD=0x1;end;else if XD==0X0000 then if PD==0 then return eD*0X0;else local af=0;repeat if af==0X00 then XD=0x01;af=0X1;else gD=0;break;end;until(false);end;else if XD==2047 then if PD~=0 then return eD*(1/0X0);else do return eD*(0X0/0);end;end;end;end;do HD=0;end;end;else do return eD*(2^(XD-1023))*(PD/X+gD);end;end;end;end;AR=0X0;end;end;end;local a=(c and c.bxor or function(hx,Jx)hx=hx%p;local rx,jx=0x000,1;local Ox=nil;repeat do if jx<=0x000 then Ox=0X1;jx=2;else if jx~=1 then while hx>0 and Jx>0X00 do local Li=Jx%0X10;local Ki=hx%16;do rx=rx+B[Ki][Li]*Ox;end;local Gi=(2);while Gi~=3 do if not(Gi<=0X0)then if Gi~=0X1 then hx=(hx-Ki)/16;Gi=0;else Ox=Ox*0X010;Gi=3;end;else do Jx=(Jx-Li)/16;end;Gi=1;end;end;end;break;else do Jx=Jx%p;end;jx=0x0;end;end;end;until(false);return rx+hx*Ox+Jx*Ox;end);local b=c and c.band or function(uX,zX)for HM=0,0X2 do if not(HM<=0)then if HM~=1 then return((uX+zX)-a(uX,zX))/2;else zX=zX%p;end;else uX=uX%p;end;end;end;local l=(c and c.bor or function(OR,C_)local L_=(0X01);repeat if L_<=0X00000 then return r-b(r-OR,r-C_);else if L_~=1 then C_=C_%p;L_=0X0;else OR=OR%p;L_=0X2;end;end;until false;end);local t=(c and c.lshift);local W=(c and c.bnot or function(sK)return r-(sK%p);end);local C=(c and c[cR]);t=t or function(V2,d2)if d2>=aR then return 0;end;local y2=(0X0);repeat do if y2==0 then do if d2<0 then return C(V2,-d2);end;end;y2=1;else return(V2*d[d2])%p;end;end;until false;end;C=C or function(uH,yH)do if yH>=32 then return 0;end;end;local fH=nil;local jH=(0X2);while true do if not(jH<=0X0000)then if jH==0X001 then return fH-fH%1;else if yH<0 then return t(uH,-yH);end;do jH=0;end;end;else fH=(uH%p/d[yH]);jH=1;end;end;end;local q,J=error,({[bR]=5,[0X0005]=0X9,[0x0]=0X3,[6]=0X2,[pR]=0X7,[mR]=0X3,[0X003]=0x4,[0X00001]=5,[4]=uR});local h=(function()local jf,Kf=0,(0);repeat local Eu=(Q(g,s,s));s=s+0X1;jf=l(jf,t(b(Eu,127),Kf));do if b(Eu,128)~=0X0 then else return jf;end;end;Kf=Kf+0x7;until false;end);local O=(U());local FR=(function(...)return w("#",...),{...};end);local vR=U();local wR,PR,I,YR,A,xR,QR,ZR=nil,nil,nil,nil,nil,nil,nil,(nil);for yu=0X00,0X0008 do if yu<=3 then if not(yu<=0X1)then if yu~=0X2 then YR=0X1;else I=tR;end;else if yu==0 then wR=function(Zo)local po={Q(g,s,s+0X3)};local fo=(a(po[1],vR));local Io,to,vo=nil,nil,nil;local uo=0x00000;do while(true)do if uo<=2 then if not(uo<=0X00000)then if uo==1 then vo=a(po[4],vR);do uo=2;end;else vR=(61*vR+Zo)%lR;uo=0X00003;end;else Io=a(po[0X002],vR);uo=0X5;end;else if uo<=3 then do s=s+4;end;uo=4;else if uo==0X04 then return vo*16777216+to*65536+Io*0X00100+fo;else to=a(po[3],vR);do uo=0x00001;end;end;end;end;end;end;end;else PR=function(ii)local ui,ti=nil,(nil);local vi=0X2;repeat do if not(vi<=0X1)then if not(vi<=0x0002)then do if vi==0X03 then s=s+ui;vi=4;else return ti;end;end;else do ui=m();end;do vi=0X00;end;end;else if vi~=0 then for ch=1,ui,7997 do local fh=ch+7997-1;if not(fh>ui)then else fh=ui;end;local xh=({Q(g,s+ch-1,s+fh-uR)});for tI=1,#xh do local FI=0X000;while FI~=2 do do if FI==0x00000 then(xh)[tI]=a(xh[tI],O);FI=0X1;else O=(ii*O+0X00002D)%256;FI=2;end;end;end;end;ti=ti..Z(G(xh));end;vi=0x3;else ti=WR;vi=0X1;end;end;end;until(false);end;end;end;else if yu<=0X5 then do if yu~=4 then else A=function()local IU=nil;do for Cw=0,2 do if Cw<=0x0 then IU=h();else if Cw~=1 then return IU;else do if IU>f then return IU-p;end;end;end;end;end;end;end;end;end;else if not(yu<=6)then if yu==0X7 then function QR()local Z5,R5,a5,S5,K5,v5,q5,h5,i5,Y5,l5,G5,m5=0X0014,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat do if Z5<=9 then if not(Z5<=0X00004)then do if Z5<=0X06 then if Z5==5 then do K5={};end;Z5=13;else G5=m()-hR;Z5=0X12;end;else if Z5<=0X7 then m5=U();do Z5=0Xb;end;else if Z5~=8 then for dy=1,h5 do local zy,jy,yy=nil,nil,nil;local ly=2;repeat do if ly<=0X3 then if ly<=1 then if ly==0 then jy=nR;do ly=5;end;else do(K5)[R5]=yy;end;do ly=0x3;end;end;else do if ly==2 then zy=U();do ly=0;end;else R5=R5+1;ly=6;end;end;end;else if not(ly<=5)then if ly==0X0006 then if Y5 then local U7=(1);repeat if U7~=0X0 then RR[YR]=yy;U7=0x00;else YR=YR+1;U7=0X2;end;until U7>=0x2;end;ly=8;else yy={jy,{}};ly=1;end;else if ly~=4 then(a5)[dy-uR]=R5;do ly=0X04;end;else if zy==0x000F7 then jy=x(PR(i5),1);elseif zy==CR then jy=x(PR(i5),6);elseif zy==0XA0 then jy=zR;elseif zy==12 then do jy=x(PR(i5),m());end;elseif zy==215 then jy=M()+m();elseif zy==0XA then jy=x(PR(i5),1);elseif zy==0X0009 then jy=T();elseif zy==71 then jy=x(PR(i5),1);elseif zy==127 then jy=M();elseif zy==0X0005 then jy=JR;elseif zy==102 then jy=M()+m();end;ly=7;end;end;end;end;until ly==8;end;Z5=6;else R5=uR;Z5=17;end;end;end;end;else if Z5<=1 then if Z5==0 then for bk=1,G5 do local lk=(nil);local pk=(0X00001);do while pk~=2 do if pk~=0 then lk=S5[2][bk];pk=0x0;else do for sh,qh in ipairs(z)do local kh=(J[qh]);local Bh=lk[kh];if Bh==11 then local wI,jI=nil,(nil);local bI=(0x1);repeat if not(bI<=0)then if bI==0X1 then wI=a5[lk[qh]];do bI=0X2;end;else jI=K5[wI];bI=0X0;end;else if jI then local IG=nil;do for Dp=0X000,0X1 do if Dp==0X0 then(lk)[kh]=jI[uR];else IG=jI[0X02];end;end;end;IG[#IG+uR]={lk,kh};end;do bI=0X3;end;end;until bI>=3;elseif Bh~=0Xe then else lk[qh]=bk+lk[qh]+1;end;end;end;pk=0X02;end;end;end;end;Z5=0x00A;else(S5)[mR]=h();Z5=0X10;end;else if not(Z5<=2)then if Z5~=3 then l5=S5[2];Z5=0X9;else do Y5=U()~=0X00;end;do Z5=0x04;end;end;else h5=m()-0xf78B;Z5=14;end;end;end;else if Z5<=14 then do if not(Z5<=11)then if Z5<=0Xc then do S5={{},{},nR,nR,nR,{},nR,nR,nil};end;Z5=0x5;else if Z5~=0xD then i5=U();do Z5=0X0003;end;else S5[0X8]=h();Z5=1;end;end;else if Z5~=10 then do S5[4]=k(m5,1,uR)~=0X0;end;break;else S5[19]=m();Z5=0x7;end;end;end;else if not(Z5<=17)then if Z5<=18 then for Wk=0X1,G5 do(l5)[Wk]={[3]=A(),[4]=U(),[0x007]=U(),[0X6]=h(),[0X1]=A(),[0X5]=U(),[2]=A()};end;Z5=0;else do if Z5==19 then do q5={};end;Z5=15;else do Z5=0X8;end;end;end;end;else if not(Z5<=0xF)then if Z5==0X10 then v5=m();Z5=19;else a5={};Z5=12;end;else for Ce=1,v5 do local be,le,he=nil,nil,nil;for M1=0,3 do if M1<=0X00001 then if M1==0 then be=m();else le=m();end;else if M1==2 then he=m();else for ca=be,le do(S5[1])[ca]=he;end;end;end;end;end;Z5=0x0002;end;end;end;end;end;until(false);Z5=0X0;while(true)do if Z5<=0X01 then if Z5==0x00000 then(S5)[0x7]=k(m5,0x2,uR)~=0x0;Z5=3;else S5[3]=q5;Z5=2;end;else if not(Z5<=2)then if Z5==3 then(S5)[10]=U();Z5=0X00004;else(S5)[9]=h();Z5=1;end;else for x3=1,h()do do q5[x3]={U(),h()};end;end;break;end;end;end;(S5)[jR]=U();local k5=S5[6];local c5=(m()-0xFE8);for Ht=NR,c5-1 do(k5)[Ht]=QR();end;for v_=0x000,1 do if v_~=0x00 then return S5;else(S5)[0X011]=m();end;end;end;else do ZR=QR();end;end;else function xR(hK,jK,gK)local QK=jK[0X5];local KK=(jK[9]);local FK,YK=jK[4],jK[0x7];local cK=jK[1];local OK,RK=jK[2],jK[6];local tK=(E({},{__mode="v"}));local WK,SK=jK[0X8],(nil);SK=function(...)local TE=(0x1);local rE=(D and D()or _ENV);local fE=(0);local XE=({});local KE,BE=FR(...);KE=KE-1;do for GE=0X0000,KE do do if QK>GE then do(XE)[GE]=BE[GE+0x01];end;else do break;end;end;end;end;end;(qR)[3]=jK;(qR)[0X004]=XE;local ZE=(rE==y and gK or rE);if not FK then do BE=nil;end;elseif not(YK)then else do XE[QK]={n=KE>=QK and KE-QK+0X001 or 0,G(BE,QK+1,KE+1)};end;end;if ZE~=rE then if not(H)then _ENV=ZE;else(H)(SK,ZE);end;end;local IE,uE,FE,WE=F(function()do while true do local AF=OK[TE];local HF=AF[0X6];do TE=TE+1;end;do if HF<0X2C then if not(HF>=0X016)then if not(HF>=0X00b)then if HF<5 then do if not(HF<2)then if HF<3 then(XE)[AF[0X1]]=qR[AF[3]];else do if HF~=0x4 then(XE)[AF[0X1]]=XE[AF[0X3]];else do XE[AF[0x1]]=XE[AF[3]][AF[0X7]];end;end;end;end;else do if HF~=1 then local NW=(AF[0X1]);(XE)[NW]=XE[NW](XE[NW+1],XE[NW+0x2]);fE=NW;else if not(not(XE[AF[3]]<XE[AF[2]]))then else do TE=AF[1];end;end;end;end;end;end;else if HF>=8 then if not(HF<9)then if HF==0XA then do XE[AF[0x1]]=XE[AF[0X03]]~=XE[AF[0X2]];end;else XE[AF[1]][AF[0X4]]=XE[AF[2]];end;else local dE=(AF[0X1]);local EE=I(function(...)u();do for dc in...do u(true,dc);end;end;end);(EE)(XE[dE],XE[dE+1],XE[dE+2]);fE=dE;do(XE)[dE]=EE;end;TE=AF[0x3];end;else if not(HF>=0x0006)then(XE)[AF[1]]=W(XE[AF[0X0003]]);else if HF==7 then local ov=(AF[0X1]);local Iv=I(function(...)u();for q0,W0 in...do(u)(true,q0,W0);end;end);Iv(XE[ov],XE[ov+0x00001],XE[ov+2]);fE=ov;do(XE)[ov]=Iv;end;do TE=AF[3];end;else do(XE[AF[0X1]])[AF[0X4]]=AF[0X7];end;end;end;end;end;else if HF>=0X10 then do if HF<0X000013 then if not(HF<0X11)then if HF~=18 then XE[AF[0x1]]=XE[AF[3]]>XE[AF[2]];else local a5=hK[AF[3]];do(a5[0X1])[a5[0X02]]=XE[AF[1]];end;end;else(XE)[AF[0X1]]=XE[AF[0X03]]+XE[AF[2]];end;else if not(HF>=0X14)then XE[AF[0X00001]]=true;else if HF==0X000015 then local u7=(AF[1]);(XE[u7])(G(XE,u7+1,fE));fE=u7-1;else XE[AF[0X1]]=AF[0x04];end;end;end;end;else if not(HF>=13)then if HF==0Xc then local xb=AF[0X1];local Yb,pb,Ab=XE[xb]();if Yb then XE[xb+0X1]=pb;XE[xb+2]=Ab;TE=AF[0X003];end;else local FD=AF[0X0001];local YD=XE[FD+2];local JD=XE[FD+1];local HD=(XE[FD]);(XE)[FD]=I(function()for pe=HD,JD,YD do(u)(true,pe);end;end);TE=AF[0X3];end;else do if not(HF<14)then if HF~=0X0f then(XE)[AF[0X1]]=XE[AF[3]][XE[AF[0X2]]];else if not(not(XE[AF[0X3]]<AF[7]))then else do TE=AF[1];end;end;end;else repeat local gv,Ev=tK,XE;if not(#gv>0)then else local UZ={};for OL,SL in o,gv do do for Z7,H7 in o,SL do if not(H7[0X00001]==Ev and H7[2]>=0)then else local Rz=(H7[0X00002]);if not UZ[Rz]then(UZ)[Rz]={Ev[Rz]};end;(H7)[0X1]=UZ[Rz];(H7)[0x002]=1;end;end;end;end;end;until true;return true,AF[1],0;end;end;end;end;end;else if not(HF<0X21)then do if HF<38 then if HF>=0X0023 then if not(HF<36)then if HF~=0x025 then local Vh=(AF[1]);local lh,jh=XE[Vh]();do if not(lh)then else XE[Vh+1]=jh;TE=AF[3];end;end;else local mk=AF[3];do XE[AF[0X1]]=XE[mk]..XE[mk+0x001];end;end;else do(ZE)[AF[4]]=XE[AF[0X1]];end;end;else if HF~=0X22 then local rs=(AF[2]);local Ks,os=AF[1],(AF[0X3]);if os==0 then else fE=Ks+os-1;end;local ls,Rs=nil,(nil);if os==1 then do ls,Rs=FR(XE[Ks]());end;else do ls,Rs=FR(XE[Ks](G(XE,Ks+1,fE)));end;end;if rs~=1 then do if rs==0X0 then do ls=ls+Ks-0X1;end;fE=ls;else ls=Ks+rs-2;fE=ls+0X1;end;end;local lV=0;for Fo=Ks,ls do lV=lV+0X01;XE[Fo]=Rs[lV];end;else fE=Ks-1;end;else do(XE)[AF[1]]=b(XE[AF[0X3]],XE[AF[0x002]]);end;end;end;else if HF<0x29 then do if not(HF>=39)then local Co=AF[1];(XE)[Co]=XE[Co](G(XE,Co+1,fE));fE=Co;else if HF~=0X28 then do(XE)[AF[0X1]]=XE[AF[0X00003]]<=XE[AF[2]];end;else if XE[AF[0X3]]==AF[0X0007]then do TE=AF[1];end;end;end;end;end;else if HF<42 then local h0=AF[1];(XE)[h0]=XE[h0](XE[h0+1]);fE=h0;else if HF~=0X2b then do(XE)[AF[1]]=XE[AF[3]]%XE[AF[2]];end;else if not(XE[AF[0X3]]<=AF[7])then do TE=AF[1];end;end;end;end;end;end;end;else if HF>=27 then if HF<0X1E then do if HF>=0X1c then if HF~=29 then(XE[AF[0X1]])[XE[AF[0X3]]]=XE[AF[0X2]];else fE=AF[0X1];XE[fE]=XE[fE]();end;else do(XE)[AF[0x001]]=l(XE[AF[3]],XE[AF[0X00002]]);end;end;end;else if not(HF>=31)then do XE[AF[1]]=a(XE[AF[3]],XE[AF[2]]);end;else if HF==0X000020 then do if XE[AF[0X3]]==XE[AF[0X00002]]then TE=AF[1];end;end;else local E9,B9=AF[1],(XE[AF[3]]);XE[E9+0X1]=B9;XE[E9]=B9[AF[7]];end;end;end;else do if HF>=24 then if HF>=0X000019 then if HF==26 then(XE)[AF[1]]=false;else do fE=AF[1];end;XE[fE]();fE=fE-1;end;else local HS,AS=AF[1],KE-QK;if not(AS<0)then else AS=-0X001;end;for c5=HS,HS+AS do(XE)[c5]=BE[QK+(c5-HS)+0x1];end;fE=HS+AS;end;else do if HF~=23 then do repeat local hD,bD=tK,XE;if#hD>0X000 then local w1=({});for JL,gL in o,hD do do for j9,Y9 in o,gL do do if not(Y9[1]==bD and Y9[0X002]>=0X00000)then else local Eo=Y9[0X2];if not w1[Eo]then w1[Eo]={bD[Eo]};end;(Y9)[1]=w1[Eo];Y9[0x2]=0x001;end;end;end;end;end;end;until true;end;local P5=(AF[0X1]);return false,P5,P5;else if AF[0x002]~=0X95 then if XE[AF[0X1]]then TE=AF[0x0003];end;else TE=TE-1;do(OK)[TE]={[0X3]=(AF[0X3]-0Xb7),[0X6]=59,[0X1]=(AF[1]-0xb7)};end;end;end;end;end;end;end;end;end;else if HF>=0X00042 then if not(HF<0X4d)then if not(HF>=83)then do if not(HF<80)then if HF>=0X000051 then if HF~=82 then(XE)[AF[1]]=XE[AF[3]]<XE[AF[0X2]];else do(XE)[AF[1]]={G({},0X1,AF[0X0003])};end;end;else XE[AF[0X1]]=XE[AF[3]]%AF[0X7];end;else if HF>=78 then if HF==79 then repeat local Ms,gs=tK,XE;if#Ms>0X0 then local nz={};for HA,RA in o,Ms do do for fp,zp in o,RA do if not(zp[0X00001]==gs and zp[0X2]>=0)then else local oG=zp[2];if not(not nz[oG])then else do(nz)[oG]={gs[oG]};end;end;do(zp)[1]=nz[oG];end;do(zp)[0X2]=1;end;end;end;end;end;end;until true;return true,AF[1],1;else TE=AF[3];end;else local X_=hK[AF[0X3]];(XE)[AF[0X1]]=X_[0X1][X_[0X2]];end;end;end;else if not(HF<0x00056)then if not(HF>=87)then if not(XE[AF[0X3]]<=XE[AF[2]])then else TE=AF[1];end;else do if HF==0x58 then if AF[2]~=0xE4 then(XE)[AF[1]]=BE[QK+0X001];else TE=TE-1;do OK[TE]={[0X1]=(AF[0x1]-0XEa),[0X3]=(AF[3]-0X00EA),[6]=0X0002E};end;end;else local hD=AF[1];fE=hD+AF[0X00003]-0x00001;XE[hD](G(XE,hD+1,fE));fE=hD-0X1;end;end;end;else if not(HF<0x00054)then if HF~=0X55 then do if AF[0x00002]~=0X0000Bd then do repeat local AA,BA=tK,(XE);if not(#AA>0X000)then else local SP=({});for mU,QU in o,AA do for QD,VD in o,QU do if VD[0X1]==BA and VD[0X2]>=0 then local S3=VD[0X02];do if not(not SP[S3])then else SP[S3]={BA[S3]};end;end;(VD)[1]=SP[S3];VD[0X02]=0X01;end;end;end;end;until true;end;return;else TE=TE-0X0001;(OK)[TE]={[0X0003]=(AF[3]-37),[6]=0X00042,[1]=(AF[0X00001]-0X0025)};end;end;else do qR[AF[0X3]]=XE[AF[1]];end;end;else XE[AF[1]]=ZE[AF[0X004]];end;end;end;else do if not(HF<0X47)then if HF>=74 then if not(HF<75)then if HF~=76 then local At=((AF[2]-0x01)*50);local mt=(AF[1]);local pt=(XE[mt]);for em=0X1,AF[3]do(pt)[At+em]=XE[mt+em];end;else XE[AF[0x1]]=not XE[AF[3]];end;else local t8=(AF[1]);local d8=I(function(...)u();for Kg,ug,Hg,zg,Gg,Yg,Jg,eg,ag,Zg in...do(u)(true,{Kg,ug,Hg,zg,Gg,Yg,Jg,eg,ag,Zg});end;end);(d8)(XE[t8],XE[t8+1],XE[t8+0X2]);do fE=t8;end;XE[t8]=d8;TE=AF[3];end;else if not(HF<0x000048)then if HF==73 then local Wx=(AF[1]);local mx=((AF[2]-0X01)*0X32);local lx=XE[Wx];for F5=0x1,fE-Wx do do(lx)[mx+F5]=XE[Wx+F5];end;end;else repeat local Bq,Sq=tK,XE;do if not(#Bq>0)then else local kE=({});for lr,fr in o,Bq do for av,zv in o,fr do do if zv[1]==Sq and zv[2]>=0 then local YU=(zv[0X002]);do if not(not kE[YU])then else do(kE)[YU]={Sq[YU]};end;end;end;do(zv)[0X1]=kE[YU];end;(zv)[2]=1;end;end;end;end;end;end;until true;return false,AF[0X1],fE;end;else repeat local sW,OW,EW=tK,XE,AF[1];if not(#sW>0)then else local bO=({});for A9,N9 in o,sW do for Va,Ka in o,N9 do do if not(Ka[0X1]==OW and Ka[2]>=EW)then else local Jl=Ka[0X2];if not bO[Jl]then bO[Jl]={OW[Jl]};end;Ka[0X01]=bO[Jl];(Ka)[0x2]=0X1;end;end;end;end;end;until true;end;end;else if HF>=0X44 then if HF<69 then(XE)[AF[1]]=XE[AF[3]]*XE[AF[2]];else do if HF~=70 then if not(XE[AF[0x3]]<=XE[AF[2]])then TE=AF[0X001];end;else if XE[AF[3]]==XE[AF[0x2]]then else TE=AF[1];end;end;end;end;else if HF~=0X43 then do(XE)[AF[0x00001]]=-XE[AF[3]];end;else local Ox=(AF[1]);(XE[Ox])(XE[Ox+0X1]);fE=Ox-1;end;end;end;end;end;else if not(HF>=55)then if HF>=0X31 then if HF>=0X34 then if HF>=0x035 then if HF==54 then(XE)[AF[1]]=XE[AF[0x0003]]/XE[AF[2]];else do XE[AF[0X1]]=XE[AF[0x03]]~=AF[0X7];end;end;else local nD=(AF[1]);(XE[nD])(XE[nD+0x1],XE[nD+2]);do fE=nD-0x1;end;end;else if not(HF<50)then if HF==51 then local A7=(AF[1]);for rM=A7,A7+(AF[0X3]-0X001)do do(XE)[rM]=BE[QK+(rM-A7)+1];end;end;else local wJ=(AF[1]);local EJ,VJ=XE[wJ]();do if not(EJ)then else TE=AF[3];do(XE)[wJ+0X3]=VJ;end;end;end;end;else repeat local n0,b0=tK,XE;if#n0>0X0 then local S7={};for nJ,OJ in o,n0 do for Sg,Og in o,OJ do if not(Og[1]==b0 and Og[0X0002]>=0X0)then else local Wj=Og[0X002];if not S7[Wj]then do(S7)[Wj]={b0[Wj]};end;end;(Og)[1]=S7[Wj];Og[0X00002]=0X1;end;end;end;end;until true;local ir=(AF[0X1]);do return false,ir,ir+AF[0X3]-0X00002;end;end;end;else if not(HF<46)then if not(HF<47)then if HF==0X30 then local DQ=AF[0X1];local NQ,RQ=XE[DQ]();do if NQ then for u0=0X1,AF[2]do do XE[DQ+u0]=RQ[u0];end;end;TE=AF[3];end;end;else XE[AF[0x1]][XE[AF[0X3]]]=AF[0X007];end;else if AF[2]==0X0056 then TE=TE-1;OK[TE]={[0X00006]=24,[1]=(AF[0X1]-0x0058),[3]=(AF[0x03]-0X0058)};else XE[AF[0X01]]=nil;end;end;else do if HF~=45 then do XE[AF[0X0001]]=XE[AF[0X0003]]-XE[AF[2]];end;else(XE)[AF[1]]=XE[AF[0X3]]==XE[AF[0X2]];end;end;end;end;else if HF>=0X3c then if HF>=0X0003F then if not(HF>=0X40)then(XE)[AF[1]]=XE[AF[3]]^XE[AF[2]];else if HF==65 then local u9=(AF[0X3]);local z9=(AF[1]);do fE=z9+u9-1;end;do repeat local eI,qI=tK,XE;if not(#eI>0X000)then else local Md=({});do for m5,R5 in o,eI do do for Jw,Iw in o,R5 do if Iw[1]==qI and Iw[0x2]>=0 then local WF=Iw[2];do if not(not Md[WF])then else Md[WF]={qI[WF]};end;end;(Iw)[0X001]=Md[WF];Iw[2]=1;end;end;end;end;end;end;until true;end;do return true,z9,u9;end;else local Ux=(RK[AF[0X003]]);local Jx=(nil);local Rx=Ux[0X003];local vx=#Rx;if not(vx>0)then else Jx={};for PX=1,vx do local HX=Rx[PX];if HX[1]~=0 then do(Jx)[PX-0X1]=hK[HX[0x2]];end;else(Jx)[PX-0X1]={XE,HX[2]};end;end;K(tK,Jx);end;(XE)[AF[0X01]]=xR(Jx,Ux,ZE);end;end;else if not(HF<61)then if HF==62 then XE[AF[0X1]]=t(XE[AF[0X3]],XE[AF[2]]);else(XE)[AF[1]]=XE[AF[3]]>=XE[AF[2]];end;else do if AF[0X2]==0X93 then TE=TE-1;OK[TE]={[3]=(AF[3]-0X00026),[1]=(AF[0x00001]-0X26),[0x6]=71};else if not XE[AF[1]]then TE=AF[0X003];end;end;end;end;end;else if HF<57 then if HF~=56 then local Qm=AF[0X003];local am=(XE[Qm]);for E4=Qm+0X1,AF[2]do am=am..XE[E4];end;do XE[AF[1]]=am;end;else(XE)[AF[0X1]]={};end;else if HF>=58 then do if HF==0x3B then XE[AF[1]]=#XE[AF[3]];else for U5=AF[1],AF[3]do XE[U5]=nil;end;end;end;else if XE[AF[3]]==AF[7]then else TE=AF[0X001];end;end;end;end;end;end;end;end;end;end;end);if IE then if uE then do if WE~=0X1 then return XE[FE](G(XE,FE+0X1,fE));else do return XE[FE]();end;end;end;elseif not(FE)then else return G(XE,FE,WE);end;else if R(uE)=='\115t\114i\110\103'then do if not(e(uE,'\097\116\116em\112\116 to\032y\105e\108d\032\097cros\115 \109\101\116\097\109et\104\111d\047\067\037\045c\097ll \098o\117ndar\121'))then else return coroutine.yield();end;end;do if e(uE,"^.-:%d+: ")then q("Luraph Script:"..(cK[TE-0x1]or'(\105\110tern\097\108\041')..": "..Y(uE),0x0000);else q(uE,0);end;end;else q(uE,0X0000);end;end;end;if H then H(SK,gK);end;return SK;end;end;end;end;end;qR[pR]=RR;do AR=0X1;end;repeat if AR==0 then return xR(nil,ZR,y)(...);else RR=nil;AR=0;end;until false;end)('rs\104\105\102t',0x7,0X100,0Xf,string,string.match,bit,0Xd2,nil,'',10,getfenv,0X9,14,tonumber,table.unpack,6,true,coroutine.wrap,2,1,5,0X8,string.gsub,setmetatable,pcall,_ENV,13,string.char,string.sub,0X0,0xC,20,coroutine.yield,525,table,3,0x20,select,false,...);
